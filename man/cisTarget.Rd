% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/10_cisTarget.R
\name{cisTarget}
\alias{cisTarget}
\title{cisTarget}
\usage{
cisTarget(geneSets, motifRankings, motifAnnot_direct = NULL,
  motifAnnot_indirect = NULL, highlightTFs = NULL, nesThreshold = 3,
  aucThresholdPERC = 0.05, geneErnMethod = "aprox",
  geneErnMmaxRank = 5000, nCores = 1, verbose = TRUE)
}
\arguments{
\item{geneSets}{List of gene-sets to analyze. The gene-sets should be provided as a 'named list' in which each element is a gene-set (i.e. \code{list(geneSet1=c("gene1", "gene2"))})}

\item{motifRankings}{Database of the appropiate organism and search-space (i.e. 10kbp around- or 500bp upstream the TSS).
These objects are provided in separate packages: \link[http://bioconductor.org/packages/RcisTarget.hg19.motifDatabases]{RcisTarget.hg19.motifDatabases} (Human), \link[http://bioconductor.org/packages/RcisTarget.mm9.motifDatabases]{RcisTarget.mm9.motifDatabases} (Mouse).
See the help files for more information: i.e. \code{help(RcisTarget.hg19.motifDatabases)}.}

\item{motifAnnot_direct}{TO DO}

\item{motifAnnot_indirect}{TO DO}

\item{highlightTFs}{TO DO}

\item{nesThreshold}{TO DO}

\item{aucThresholdPERC}{Threshold to calculate the AUC.
In a simplified way, the AUC value represents the fraction of genes -within the top X genes in the ranking- that are included in the signature.
The parameter 'aucThresholdPERC' allows to modify the percentage of genes (of the top of the ranking) that is used to perform this computation.
By default it is set to 5\% of the total number of genes in the rankings. Common values range from 1 to 10\%.}

\item{geneErnMethod}{TO DO}

\item{geneErnMmaxRank}{TO DO}

\item{nCores}{Number of cores to use for computation.
Note: In general, using a higher number of cores (e.g. processes) decreases overall running time. However, it also deppends on the available memory and overall system load. Setting nCores too high might also decrease performance.}

\item{verbose}{Should the function show progress messages? (TRUE / FALSE)
See \code{vignette("RcisTarget")} for examples and more details.}
}
\value{
Data table containing the over-represented motifs (according to the selected NES threshold),
their statistics, annotation to transcription factors and the genes with high enrichment of the motif.
}
\description{
Identifies DNA motifs significantly over-represented in a gene-set.

This is the main function to run RcisTarget (motif enrichment analysis):
It is a wrapper that calls \link{calcAUC}, \link{addMotifAnnotation}
and \link{addSignificantGenes}.
}
\examples{

# ~~ Quick example on how to run (R)cisTarget through the wrapper function ~~

##################################################
# Format gene sets

# RcisTarget requires the gene sets to be stored in a list with this format:
genes <- c("gene1", "gene2", "gene3")
geneLists <- list(geneSet1=genes)
# (The name 'geneSet1' can be changed)

# In this example we will use an Hypoxia gene set included in the package:
txtFile <- paste(file.path(system.file('examples', package='RcisTarget')),
                 "hypoxiaGeneSet.txt", sep="/")
geneLists <- list(hypoxia=read.table(txtFile)[,1])


##################################################
# Load databases

# Select the package/database according to the organism and distance around TSS
# Load the motif rankings to calculate the AUC
library(RcisTarget.hg19.motifDatabases)
data(hg19_10kbpAroundTss_motifRanking)
motifRankings <- hg19_10kbpAroundTss_motifRanking

# If you only want to explore the workflow & interface, you can run the example faster
# using a fake-database with 5000 random motifs
# DO NOT use in real analyses! To identify statistically significant motifs,
# RcisTarget needs the whole motif database.
set.seed(123)
motifRankings <- hg19_10kbpAroundTss_motifRanking[,c("rn",
        sample(colnames(hg19_10kbpAroundTss_motifRanking), 5000)), with=FALSE]


##################################################
# Run (R)cisTarget

motifEnrichmentTable_wGenes <- cisTarget(geneLists, motifRankings,
                       motifAnnot_direct=hg19_direct_motifAnnotation,
                       highlightTFs="HIF1A", nesThreshold=5,
                       geneErnMethod="aprox", nCores=2)

##################################################
# Exploring the output:
# Note: Using the fake-database, these results are not meaningful.

# Number of enriched motifs (Over the given NES threshold)
nrow(motifEnrichmentTable_wGenes)

# Available info (columns)
colnames(motifEnrichmentTable_wGenes)

# The object returned is a data.table (for faster computation),
# which has a diferent syntax from the standard data.frame or matrix
class(motifEnrichmentTable_wGenes)
motifEnrichmentTable_wGenes[,1:9, with=FALSE]

# Feel free to convert it to a data.frame:
motifEnrichmentTable_wGenes <- as.data.frame(motifEnrichmentTable_wGenes)
motifEnrichmentTable_wGenes[,1:9]

# Enriched genes
enrGenes <- motifEnrichmentTable_wGenes[1,"enrichedGenes"]
strsplit(enrGenes, ";")


# Interactive exploration
library(DT)
datatable(motifEnrichmentTable_wGenes[,1:9], filter="top", options=list(pageLength=5))
}

